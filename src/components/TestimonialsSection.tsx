'use client';

import { useScrollAnimation, useStaggeredAnimation } from '@/hooks/useScrollAnimation';

const testimonials = [
  {
    id: 1,
    name: "Nguy·ªÖn Th·ªã Lan",
    role: "Kh√°ch h√†ng th∆∞·ªùng xuy√™n",
    content: "L·∫©u cua ƒë·ªìng ·ªü ƒë√¢y th·ª±c s·ª± tuy·ªát v·ªùi! Cua t∆∞∆°i ngon, n∆∞·ªõc d√πng ƒë·∫≠m ƒë√†. T√¥i ƒë√£ gi·ªõi thi·ªáu cho nhi·ªÅu b·∫°n b√® v√† ai c≈©ng khen ng·ª£i.",
    rating: 5,
    avatar: "üë©‚Äçüíº"
  },
  {
    id: 2,
    name: "Tr·∫ßn VƒÉn Minh",
    role: "Food blogger",
    content: "Kh√¥ng gian nh√† h√†ng ·∫•m c√∫ng, ph·ª•c v·ª• t·∫≠n t√¨nh. ƒê·∫∑c bi·ªát m√≥n b√∫n ri√™u cua ƒë·ªìng r·∫•t ƒë·∫∑c bi·ªát, kh√°c h·∫≥n nh·ªØng n∆°i kh√°c t√¥i t·ª´ng th·ª≠.",
    rating: 5,
    avatar: "üë®‚Äçüíª"
  },
  {
    id: 3,
    name: "L√™ Th·ªã H∆∞∆°ng",
    role: "Gia ƒë√¨nh 4 ng∆∞·ªùi",
    content: "ƒê∆∞a gia ƒë√¨nh ƒë·∫øn ƒÉn r·∫•t h√†i l√≤ng. Gi√° c·∫£ h·ª£p l√Ω, ch·∫•t l∆∞·ª£ng tuy·ªát v·ªùi. C√°c con r·∫•t th√≠ch kh√¥ng gian v√† m√≥n ƒÉn ·ªü ƒë√¢y.",
    rating: 5,
    avatar: "üë©‚Äçüëß‚Äçüë¶"
  }
];

export const TestimonialsSection = () => {
  const { elementRef, isVisible } = useScrollAnimation({ threshold: 0.2 });
  const { containerRef, visibleItems } = useStaggeredAnimation(testimonials.length, 200);

  return (
    <section 
      ref={elementRef as any}
      className="py-20 bg-gradient-to-b from-red-50 to-white relative overflow-hidden"
    >
      {/* Background Pattern */}
      <div className="absolute inset-0 opacity-5">
        <div className="absolute top-10 left-10 w-20 h-20 bg-red-400 rounded-full blur-xl"></div>
        <div className="absolute bottom-10 right-10 w-32 h-32 bg-yellow-400 rounded-full blur-xl"></div>
      </div>

      <div className="container mx-auto px-4 relative z-10">
        {/* Section Header */}
        <div className={`text-center mb-16 transition-all duration-1000 ${
          isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'
        }`}>
          <h3 className="text-4xl font-bold text-red-800 mb-4">
            Kh√°ch h√†ng n√≥i g√¨ v·ªÅ ch√∫ng t√¥i
          </h3>
          <div className="w-24 h-1 bg-gradient-to-r from-red-600 to-red-400 mx-auto rounded-full mb-6"></div>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            H√†ng ngh√¨n kh√°ch h√†ng ƒë√£ tin t∆∞·ªüng v√† y√™u th√≠ch h∆∞∆°ng v·ªã ƒë·∫∑c bi·ªát c·ªßa ch√∫ng t√¥i
          </p>
        </div>

        {/* Testimonials Grid */}
        <div 
          ref={containerRef as any}
          className="grid md:grid-cols-3 gap-8 max-w-6xl mx-auto"
        >
          {testimonials.map((testimonial, index) => (
            <div
              key={testimonial.id}
              className={`bg-white rounded-2xl p-8 shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 border border-red-100 ${
                visibleItems[index] 
                  ? 'opacity-100 translate-y-0 scale-100' 
                  : 'opacity-0 translate-y-10 scale-95'
              }`}
              style={{
                transitionDelay: visibleItems[index] ? '0ms' : `${index * 200}ms`
              }}
            >
              {/* Rating Stars */}
              <div className="flex justify-center mb-4">
                {Array.from({ length: testimonial.rating }).map((_, i) => (
                  <span key={i} className="text-yellow-400 text-xl">‚≠ê</span>
                ))}
              </div>

              {/* Content */}
              <blockquote className="text-gray-700 text-center mb-6 italic leading-relaxed">
                "{testimonial.content}"
              </blockquote>

              {/* Author */}
              <div className="text-center">
                <div className="w-16 h-16 bg-gradient-to-r from-red-100 to-red-200 rounded-full flex items-center justify-center mx-auto mb-3">
                  <span className="text-2xl">{testimonial.avatar}</span>
                </div>
                <h4 className="font-semibold text-red-800 text-lg">{testimonial.name}</h4>
                <p className="text-red-600 text-sm">{testimonial.role}</p>
              </div>

              {/* Decorative Quote */}
              <div className="absolute top-4 left-4 text-red-200 text-4xl font-serif">"</div>
            </div>
          ))}
        </div>

        {/* Call to Action */}
        <div className={`text-center mt-16 transition-all duration-1000 delay-500 ${
          isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'
        }`}>
          <p className="text-gray-600 mb-6">B·∫°n c≈©ng mu·ªën tr·∫£i nghi·ªám h∆∞∆°ng v·ªã tuy·ªát v·ªùi n√†y?</p>
          <button className="bg-gradient-to-r from-red-600 to-red-700 text-white px-8 py-3 rounded-full hover:from-red-700 hover:to-red-800 transition-all duration-300 transform hover:scale-105 hover:-translate-y-1 shadow-lg font-semibold">
            ƒê·∫∑t b√†n ngay h√¥m nay
          </button>
        </div>
      </div>
    </section>
  );
};
